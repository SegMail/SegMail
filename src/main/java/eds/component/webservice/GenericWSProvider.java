
package eds.component.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import seca2.bootstrap.module.Webservice.client.GenericWSInterface;


/**
 * This class was generated by the JAX-WS RI. And copied over by me.
 * 
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient//(name = "GenericWSProvider", //This WS client's own name, not the endpoint name
        //targetNamespace = "http://webservice.confirm.subscribe.program.segmail/", 
        //wsdlLocation = "http://localhost:28081/SegMailERP/WSConfirmSubscription?wsdl") //Endpoing url
@HandlerChain(file="handlers-client.xml")
public class GenericWSProvider<WS extends GenericWSInterface>
    extends Service
{

    /**
     * To create the client connection to endpoint, we need the URL and QName
     * URL tells u the location of the endpoint.
     * Construction of a URL might throw a MalformedURLException, so this wsimport
     * generated class encapsulates it in a WebServiceException and catches it 
     * during class loading (static scope) and stores it in WSCONFIRMSUBSCRIPTION_EXCEPTION,
     * only to be thrown in the constructor.
     * 
     * QName is an XML qualified name. It consist of a namespace and localpart.
     * 
     */
    
    private final URL wsdlLocation;
    private final QName serviceName;
    private final QName portName;
    
    public GenericWSProvider(URL wsdlLocation, QName serviceName, QName portName) {
        super(wsdlLocation, serviceName);
        this.wsdlLocation = wsdlLocation;
        this.serviceName = serviceName;
        this.portName = portName;
    }

    /**
     * 
     * @param <WS>
     * @param ws
     * @return
     *     returns WSConfirmSubscriptionImpl
     */
    //@WebEndpoint(name = "WSConfirmSubscriptionPort")
    public <WS extends GenericWSInterface> WS getWSPort(Class<WS> ws) {
        /*return super.getPort(new QName("http://webservice.confirm.subscribe.program.segmail/", 
                        "WSConfirmSubscriptionPort"), 
                WSConfirmSubscriptionInterface.class);*/
        return super.getPort(this.portName,ws);
    }

}
