
package segmail.program.subscribe.confirm.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;


/**
 * This class was generated by the JAX-WS RI. And copied over by me.
 * 
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient//(name = "WSConfirmSubscriptionService", //This WS client's own name, not the endpoint name
        //targetNamespace = "http://webservice.confirm.subscribe.program.segmail/", 
        //wsdlLocation = "http://localhost:28081/SegMailERP/WSConfirmSubscription?wsdl") //Endpoing url
@HandlerChain(file="handlers-client.xml")
public class WSConfirmSubscriptionService
    extends Service
{

    /**
     * To create the client connection to endpoint, we need the URL and QName
     * URL tells u the location of the endpoint.
     * Construction of a URL might throw a MalformedURLException, so this wsimport
     * generated class encapsulates it in a WebServiceException and catches it 
     * during class loading (static scope) and stores it in WSCONFIRMSUBSCRIPTION_EXCEPTION,
     * only to be thrown in the constructor.
     * 
     * QName is an XML qualified name. It consist of a namespace and localpart.
     * 
     */
    private final static URL WSCONFIRMSUBSCRIPTION_WSDL_LOCATION;
    private final static WebServiceException WSCONFIRMSUBSCRIPTION_EXCEPTION;
    private final static QName WSCONFIRMSUBSCRIPTION_QNAME 
            = new QName("http://webservice.confirm.subscribe.program.segmail/", "WSConfirmSubscription");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            //url = new URL("http://localhost:8080/SegMail/WSConfirmSubscription?wsdl");
            url = new URL("http://localhost:28081/SegMailERP/WSConfirmSubscription?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSCONFIRMSUBSCRIPTION_WSDL_LOCATION = url;
        WSCONFIRMSUBSCRIPTION_EXCEPTION = e;
    }

    public WSConfirmSubscriptionService() {
        super(__getWsdlLocation(), WSCONFIRMSUBSCRIPTION_QNAME);
    }
/*
    public WSConfirmSubscriptionService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSCONFIRMSUBSCRIPTION_QNAME, features);
    }

    public WSConfirmSubscriptionService(URL wsdlLocation) {
        super(wsdlLocation, WSCONFIRMSUBSCRIPTION_QNAME);
    }

    public WSConfirmSubscriptionService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSCONFIRMSUBSCRIPTION_QNAME, features);
    }

    public WSConfirmSubscriptionService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSConfirmSubscriptionService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }
    */

    /**
     * 
     * @return
     *     returns WSConfirmSubscriptionImpl
     */
    @WebEndpoint(name = "WSConfirmSubscriptionPort")
    public WSConfirmSubscriptionInterface getWSConfirmSubscriptionImplPort() {
        return super.getPort(new QName("http://webservice.confirm.subscribe.program.segmail/", 
                        "WSConfirmSubscriptionPort"), 
                WSConfirmSubscriptionInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSConfirmSubscriptionImpl
     */
    /*@WebEndpoint(name = "WSConfirmSubscriptionImpl")
    public WSConfirmSubscriptionInterface getWSConfirmSubscriptionImplPort(WebServiceFeature... features) {
        return super.getPort(
                new QName("http://webservice.confirm.subscribe.program.segmail/", "WSConfirmSubscriptionImpl"), 
                WSConfirmSubscriptionInterface.class, 
                features);
    }*/

    private static URL __getWsdlLocation() {
        if (WSCONFIRMSUBSCRIPTION_EXCEPTION!= null) {
            throw WSCONFIRMSUBSCRIPTION_EXCEPTION;
        }
        return WSCONFIRMSUBSCRIPTION_WSDL_LOCATION;
    }

}
